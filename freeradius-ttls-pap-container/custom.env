# .env
# Set these values per README or your container won't do anything useful


## General RADIUS details - choose and register these details in Federation Manager before starting
FR_IDP_FQDN=
FR_IDP_REALM=

# If you are running multiple containers with the same host IP, you MUST use the same shared secret
# on all of those containers since we're using radius over UDP.
FR_IDP_SECRET=

# You can use hostnames or IPs, but FreeRADIUS 3.x only resolves hostnames at startup; if the upstream
# proxy IP changes or becomes unresolvable after startup, FreeRADIUS will be none the wiser. We
# recommend using hostnames for clarity. In the US, we recommend tlrs2.eduroam.us then tlrs1.eduroam.us
# if you're closer to the west coast.
FR_FLR_IP_1=
FR_FLR_IP_2=


## TLS details - you MUST provide this
# Your bootstrapped CA cert and private key, each in a single line, as generated by bootstrap-ca.sh
FR_TLS_CA_CERT_BASE64=
FR_TLS_CA_KEY_BASE64=

# Because FreeRADIUS can't load a new server cert once it is running, the value below is effectively an
# expiration date for your container. You MUST stop and restart (or re-pull/rebuild) the container before
# the number of days below elapses so the container can auto-generate a new cert. We recommend 90.
FR_TLS_MAXAGE=


## SP details (wireless controller / APs) - only leave blank if you're strictly an IdP (very rare!)
FR_WAP_SECRET=

# This can be an IP or a CIDR subnet
FR_WAP_IP=

# Leave blank if you don't want to assign a VLAN to users connecting to your controller / APs
FR_VLAN_VISITORS=
FR_VLAN_OWNUSERS=


## LDAP details - leave blank if you want to use the local sqlite DB instead
# Set to "ldaps" for LDAPS over port 636 or "starttls" for LDAP + StartTLS over port 389
FR_LDAP_SECURITY=

# Use hostnames here, not IPs, so we can communicate securely with the LDAP host(s). If for some reason
# you only have one LDAP host, just use the same hostname both times.
FR_LDAP_HOST_FQDN_1=
FR_LDAP_HOST_FQDN_2=

# The OU containing all your users, e.g. "ou=users,dc=example,dc=org". Users can also reside in child OUs.
# We don't recommend using the LDAP root ("dc=example,dc=org") unless you're testing.
FR_LDAP_BASEDN=

# Group that a user must be a member of in order to connect in LDAP distinguishedName format, e.g.
# "cn=eduroam users,ou=groups,dc=example,dc=org". Leave blank if everyone should be allowed to connect.
FR_LDAP_GROUP_DN=

# This user queries LDAP to determine whether a user exists, then the actual user authenticates.
# The username below can be in LDAP distinguishedName format ("cn=foo,ou=bar,dc=example,dc=org") or in
# userPrincipalName format ("foo@example.org").
FR_LDAP_BIND_USER=
FR_LDAP_BIND_PASS=

# Cert used to sign your LDAP / Domain Controller's TLS cert (see README for help finding this). Get the
# values below by running 'base64 -w 0 /path/to/your/ldap_host_ca.pem'.
# If you don't have an intermediate cert, just leave FR_LDAP_HOST_INTER_CERT_BASE64 blank.
FR_LDAP_HOST_ROOT_CERT_BASE64=
FR_LDAP_HOST_INTER_CERT_BASE64=


## Logging - use "syslog" if you have a remote syslog server ready to receive messages; otherwise use "file"
# If you choose "file", you MUST persist /var/log/freeradius/eduroam.log or you'll lose all logs when the
# container stops. Retaining the console output is NOT good enough.
FR_LOG_DESTINATION=

# syslog-specific details - all mandatory if you chose "syslog"

# Fully qualified hostname or IP address of your syslog receiver
FR_LOG_SYSLOG_HOST=

# Port number on your syslog receiver (typically 514)
FR_LOG_SYSLOG_PORT=

# Protocol for syslog: TCP or UDP (we recommend TCP)
FR_LOG_SYSLOG_PROTO=

# Syslog facility your syslog receiver should expect (we recommend local0 or local1)
FR_LOG_SYSLOG_FAC=

# Syslog severity for freeradius logs (we recommend info or notice)
FR_LOG_SYSLOG_SEV=

## Debugging - set to "yes" when testing, or leave blank if you're satisfied everything works
# This enables incredibly verbose but useful output and prevents the container from exiting if FreeRADIUS
# config fails to parse, your certs are unreadable, etc., giving you a chance to check container/console logs.
FR_DEBUG=
